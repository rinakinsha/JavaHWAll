**1 УРОК: "Знакомство с языком программирования Java"**

Task11: Вычислить n-ое треугольного число(сумма чисел от 1 до n), n! (произведение чисел от 1 до n)

Task12: Написать метод, принимающий на вход два целых числа и проверяющий, что их сумма лежит в пределах от 10 до 20 (включительно), если да – вернуть true, в противном случае – false.

Task13: Написать метод, которому в качестве параметра передается целое число, метод должен напечатать в консоль, положительное ли число передали или отрицательное. Замечание: ноль считаем положительным числом.

Task14: Написать метод, которому в качестве параметра передается целое число. Метод должен вернуть true, если число отрицательное, и вернуть false если положительное.

Task15: Написать метод, которому в качестве аргументов передается строка и число, метод должен отпечатать в консоль указанную строку, указанное количество раз;

Task16: Написать метод, который определяет, является ли год високосным, и возвращает boolean (високосный - true, не високосный - false). Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный.

Task17: Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]. С помощью цикла и условия заменить 0 на 1, 1 на 0;

Task18: Задать пустой целочисленный массив длиной 100. С помощью цикла заполнить его значениями 1 2 3 4 5 6 7 8 … 100;

Task19: Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;

Task1_10: Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое), и с помощью цикла(-ов) заполнить его диагональные элементы единицами (можно только одну из диагоналей, если обе сложно). Определить элементы одной из диагоналей можно по следующему принципу: индексы таких элементов равны, то есть [0][0], [1][1], [2][2], …, [n][n];

Task1_11: Написать метод, принимающий на вход два аргумента: len и initialValue, и возвращающий одномерный массив типа int длиной len, каждая ячейка которого равна initialValue;

Task1_12: Задать одномерный массив и найти в нем минимальный и максимальный элементы ;


**2 УРОК: "Почему вы не можете не использовать API"**

Task21: Напишите метод, который принимает на вход строку (String) и определяет является ли строка палиндромом (возвращает boolean значение).


**3 УРОК: "Коллекции JAVA: Введение"**

Task31: Пусть дан произвольный список целых чисел, удалить из него четные числа

Task32: Задан целочисленный список ArrayList. Найти минимальное, максимальное и среднее из этого списка.

Task33: Написать простой класс ТелефонныйСправочник, который хранит в себе список фамилий и телефонных номеров. В этот телефонный справочник с помощью метода add() можно добавлять записи. С помощью метода get() искать номер телефона по фамилии. Следует учесть, что под одной фамилией может быть несколько телефонов (в случае однофамильцев), тогда при запросе такой фамилии должны выводиться все телефоны.


**4 УРОК: "Хранение и обработка данных ч1: приоритетные коллекции"**

 Task41: Написать метод, который принимает массив элементов, помещает их в стэк и выводит на консоль содержимое стэка.

 Task42: Написать метод, который принимает массив элементов, помещает их в очередь и выводит на консоль содержимое очереди.

 Task43: Пусть дан LinkedList с несколькими элементами. Реализуйте метод, который вернет “перевернутый” список.
 
 Task44: Реализовать консольное приложение, которое:
 * Принимает от пользователя строку вида text~num;
 * Нужно рассплитить строку по ~, сохранить text в связный список на позицию num;
 * Если введено print~num, выводит строку из позиции num в связном списке и удаляет её из списка;
 * Если ввод не содержит символа ~, то завершает программу с ошибкой;
 * Если введено -1, то выходим.

 **5 УРОК: "Хранение и обработка данных ч2: множество коллекций Map"**

 Task51: Написать метод, который переведет число из римского формата записи в арабский.
 
 Task52: Написать метод, который переведёт данное целое число в римский формат.

 **6 УРОК:  "Хранение и обработка данных ч3: множество коллекций Set"**

 Task61: Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы. Реализовать в java.
* Создать множество ноутбуков.
* Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки,
* отвечающие фильтру. Критерии фильтрации можно хранить в Map. Например:
* “Введите цифру, соответствующую необходимому критерию:
* 1 - ОЗУ
* 2 - Объем HHD или SSD
* 3 - Операционная система
* 4 - Цвет …
* Далее нужно запросить минимальные значения для указанных критериев - сохранить параметры фильтрации можно также в Map.
* Отфильтровать ноутбуки их первоначального множества и вывести проходящие по условиям